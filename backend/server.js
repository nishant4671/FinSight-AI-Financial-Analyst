// backend/server.js
const { PDFDocument, StandardFonts } = require('pdf-lib');
const path = require('path');
// Add this endpoint after your existing routes
app.post('/api/export-pdf', async (req, res) => {
  try {
    const { title, content, author = "FinSight AI" } = req.body;
    
    // Create a new PDF document
    const pdfDoc = await PDFDocument.create();
    const page = pdfDoc.addPage();
    const { width, height } = page.getSize();
    
    // Embed fonts
    const font = await pdfDoc.embedFont(StandardFonts.Helvetica);
    const boldFont = await pdfDoc.embedFont(StandardFonts.HelveticaBold);
    
    // Add title
    page.drawText(title, {
      x: 50,
      y: height - 50,
      size: 18,
      font: boldFont,
      color: rgb(0, 0, 0.5),
    });
    
    // Add author and date
    const date = new Date().toLocaleDateString();
    page.drawText(`Generated by ${author} | ${date}`, {
      x: 50,
      y: height - 80,
      size: 10,
      font: font,
      color: rgb(0.5, 0.5, 0.5),
    });
    
    // Add content
    let y = height - 120;
    const lines = content.split('\n');
    const fontSize = 12;
    
    for (const line of lines) {
      if (y < 100) {
        // Add new page
        const newPage = pdfDoc.addPage();
        y = height - 50;
      }
      
      const isSection = line.startsWith('**');
      page.drawText(line.replace(/\*\*/g, ''), {
        x: 50,
        y,
        size: isSection ? 14 : fontSize,
        font: isSection ? boldFont : font,
        color: isSection ? rgb(0.2, 0.2, 0.6) : rgb(0, 0, 0),
      });
      
      y -= (isSection ? 20 : 15);
    }
    
    // Serialize and send
    const pdfBytes = await pdfDoc.save();
    res.setHeader('Content-Type', 'application/pdf');
    res.setHeader('Content-Disposition', 'attachment; filename=financial_report.pdf');
    res.send(pdfBytes);
    
  } catch (error) {
    console.error('PDF generation failed:', error);
    res.status(500).json({ error: 'PDF generation failed' });
  }
});
if (process.env.NODE_ENV === 'production') {
  // Serve frontend build
  app.use(express.static(path.join(__dirname, '../frontend/build')));
  
  // Handle React routing
  app.get('*', (req, res) => {
    res.sendFile(path.join(__dirname, '../frontend/build/index.html'));
  });
}